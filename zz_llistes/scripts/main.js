var VOTES_PER_BALLOT = 3;var persones = Array();var tableBallots = Array();var vot = Array();var listSectionHTML = null;var votesSectionHTML = null;Storage.prototype.setObj = function(key, obj) {    return this.setItem(key, JSON.stringify(obj))}Storage.prototype.getObj = function(key) {    return JSON.parse(this.getItem(key))}function Person(internal, id, genere, cognoms, nom, ballots) {    this.internal = internal;    this.id = id;    this.genere = genere;    this.cognoms = cognoms;    this.nom = nom;    this.ballots = ballots;}var initialize = function() {    $('.donesHolder li').each(function() {        var person = new Person(            $(this).data().internal,            $(this).data().id,            $(this).data().genere,            $(this).find('.cognoms').html(),            $(this).find('.nom').html(),            0        );        persones[$(this).data().internal] = person;    });    $('.homesHolder li').each(function() {        var person = new Person(            $(this).data().internal,            $(this).data().id,            $(this).data().genere,            $(this).find('.cognoms').html(),            $(this).find('.nom').html(),            0        );        persones[$(this).data().internal] = person;    });    listSectionHTML = $('.llistaHolder').html();    votesSectionHTML = $('.votsHolder').html();};$(function() {    initialize();});var submitVotChecks = function() {    if (vot.length == 0) {        confirmation(            "Butlleta buida",            "La butlleta té 0 ballots.<br>La butlleta és contarà com un vot en blanc. <br>Vols enviar-la?",            function() {                submitVot();            }        );    } else if (vot.length < 6) {        confirmation(            "Butlleta incomplerta",            "La butlleta té menys de 6 ballots.<br>La butlleta és vàlida i NO contarà com a un vot blanc.<br>Vols enviar-la?",            function() {                submitVot();            }        );    } else {        submitVot();    }};var submitVot = function() {    tableBallots.push(vot);    resetVot();};var showError = function(error) {    $('.errors').append('<div class="error">' + error + '</div>');    var $error = $('.errors div').last()    $error.fadeIn();    setTimeout(function() {        $error.fadeOut(function() {            $(this).remove();        });    }, 7000);    $error.click(function() {        $(this).fadeOut(function() {            $(this).remove();        });    })};var confirmation = function(title, text, callbackOK) {    if ($('.confirmations-toggle').prop("checked")) {        dialog(title, text, callbackOK);    } else {        callbackOK();    }};var dialog = function(title, text, callbackOK) {    BootstrapDialog.show({        title: title,        message: text,        buttons: [{            label: 'Si [enter]',            hotkey: 13,            action: function(dialog) {                dialog.close();                callbackOK();            }        }, {            label: 'No [esc]',            action: function(dialog) {                dialog.close();            }        }]    });};var addPersonToVot = function(from) {    var grouper = "";    var genere = from.data().genere;    switch (genere) {        case "dona":            grouper = "dones";            break;        case "home":            grouper = "homes";            break;        default:            showError("Falta génere");            return;            break;    }    var fromList = $('.llistaHolder .voteList.' + grouper);    var targetList = $(".votsHolder .voteList." + grouper);    if (targetList.find('li').size() >= VOTES_PER_BALLOT) {        showError("El limit de ballots per butlleta és de " + VOTES_PER_BALLOT);        return;    }    if (targetList.find(" li[data-id='" + from.data().id + "']").size()) {        showError("No es pot afegir aquest vot perquè ja existeix");        return;    }    if (targetList.find('li').size() == VOTES_PER_BALLOT) {        fromList.find('li').addClass("limit");    }    targetList.find("li.disabled").remove();    var cloned = from.clone();    cloned.appendTo(targetList);    from.addClass("disabled");    vot.push(persones[from.data().internal]);}var getNumber = function(keyCode) {    if (keyCode < 48 || keyCode > 57) {        return false;    }    return parseInt(keyCode - 48);};var resetVot = function() {    vot = Array();    $('.llistaHolder').html(listSectionHTML);    $('.votsHolder').html(votesSectionHTML);}var deleteLast = function() {    alert("//TODO:");}var resetOrDeleteLast = function() {    if (vot.length) {        //borrar esta        resetVot();    } else {        //borrar anterior        confirmation(            "borrar l'anterior entrada",            "estas segur que vols borrar l'anterior entrada?",            callbackOK = function() {                deleteLast();            }        );    }};var closeTable = function() {    if (vot.length) {        showError("Hi ha una butlleta a mig enviar. Acaba la butlleta primer si us plau");        return;    }    if (tableBallots.length == 0) {        showError("No s'ha introduit cap butlleta. No es pot tancar la taula");        return;    }    $.ajax({            url: "controllers/closeTable.php",            type: "GET",            data: {                "tableBallots": JSON.stringify(tableBallots)            },            dataTye: "json"        })        .done(function(data) {            //TODO: reset local storage            //TODO: reset cookies            console.info(data);        });}var keyDownController = function(event) {    event.preventDefault();    if (!$('body.vote').size()) {        //només a la secció de votacions        return false;    }    var input = $("input[name='vot']");    var currentVal = null;    if (input.val() == "") {        currentVal = 0;    } else {        currentVal = parseInt(input.val());    }    //numero    var number = getNumber(event.keyCode);    if (number !== false) {        if (currentVal == 0) {            input.val(number);        } else if (currentVal > 0 && currentVal < 10) {            currentVal = currentVal * 10 + number;            if ($(".llistaHolder .voteList li[data-internal='" + currentVal + "']").length == 1) {                addPersonToVot($(".voteList li[data-internal='" + currentVal + "']"));                input.val("");            } else {                input.val("");                showError("No existeix aquesta persona");                return;            }        } else {            input.val("");            showError("El numero introduït no és correcte");            return;        }    }    //suprimir    if (event.keyCode == 46) {        resetOrDeleteLast();    }};$(function() {    $("input[name='vot']").keydown(function(event) {        keyDownController(event);    });    $('.voteList li').click(function() {        addPersonToVot($(this));    });});$(function() {    $('.ballot-form').submit(function(event) {        event.preventDefault();        submitVotChecks();    });    $('.close-button').click(function(event) {        event.preventDefault();        closeTable();    });    $('.reset-button').click(function(event) {        event.preventDefault();        resetOrDeleteLast();    });});